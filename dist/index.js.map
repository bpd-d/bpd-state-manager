{"version":3,"sources":["webpack://bpd-toolkit/webpack/universalModuleDefinition","webpack://bpd-toolkit/webpack/bootstrap","webpack://bpd-toolkit/./src/helpers/errors.ts","webpack://bpd-toolkit/./src/helpers/functions.ts","webpack://bpd-toolkit/./src/subscriptions/subscriptions.ts","webpack://bpd-toolkit/./src/worker/worker.ts","webpack://bpd-toolkit/./src/state/state.ts","webpack://bpd-toolkit/./src/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bpd-toolkit\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bpd-toolkit\"] = factory();\n\telse\n\t\troot[\"bpd-toolkit\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export class ErrorBase extends Error {\r\n    constructor(name: string, message?: string,) {\r\n        super(message);\r\n        Object.setPrototypeOf(this, new.target.prototype);\r\n        this.name = name;\r\n    }\r\n}\r\n\r\nexport class IncorrectDataError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"IncorrectDataError\", message)\r\n    }\r\n}\r\n\r\nexport class WorkerNotReadyError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"WorkerNotReadyError\", message);\r\n    }\r\n}\r\n\r\nexport class PerformerError extends ErrorBase {\r\n    constructor(base: Error) {\r\n        super(\"PerformerError:\" + base.name, base.message);\r\n        this.stack = base.stack;\r\n    }\r\n}\r\n\r\nexport class CreateStateError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"CreateStateError\", message);\r\n    }\r\n}\r\n\r\nexport class InitStateError extends ErrorBase {\r\n    constructor(message?: string) {\r\n        super(\"InitStateError\", message);\r\n    }\r\n}\r\n\r\nexport class CommonError extends ErrorBase {\r\n    constructor(type: string, message?: string) {\r\n        super(type, message);\r\n    }\r\n}\r\n\r\nexport class StateManagerShorthandError extends ErrorBase {\r\n    constructor(type: string, message?: string) {\r\n        super(\"StateManagerShorthandError\", type + \":\" + message);\r\n    }\r\n}","export function is(obj: any) {\r\n    if (typeof obj === 'undefined' || obj === null) {\r\n        return false;\r\n    }\r\n    if (Array.isArray(obj) && obj.length === 0) {\r\n        return false;\r\n    }\r\n    if (typeof obj === 'string' && obj.length === 0) {\r\n        false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function* counter() {\r\n    let idx = 0;\r\n    while (true) {\r\n        let reset = yield idx++;\r\n        if (reset || idx > 200000) {\r\n            idx = 0\r\n        }\r\n    }\r\n}","import { IncorrectDataError } from \"../helpers/errors\";\r\nimport { counter, is } from \"../helpers/functions\";\r\n\r\nexport interface Subscriber<VState> {\r\n    id: string,\r\n    options?: SubscriberOptions;\r\n    callback: (state: VState) => void;\r\n}\r\n\r\nexport interface SubscriberOptions {\r\n    singleRun: boolean;\r\n}\r\n\r\ninterface ErrorCallback {\r\n    (e: Error): void;\r\n}\r\n\r\nexport interface ISubscriptionsManager<VState> {\r\n    onError(callback: (e: Error) => void): void;\r\n    subscribe(callback: (state: VState) => void, options?: SubscriberOptions): string;\r\n    unsubscribe(subscribtionId: string): void;\r\n    notify(state: VState): Promise<boolean>;\r\n    getSubscribers(): Subscriber<VState>[];\r\n}\r\n\r\nexport class SubscriptionsManager<VState> implements ISubscriptionsManager<VState>{\r\n    #subscribers: Subscriber<VState>[];\r\n    #onError: ErrorCallback | undefined;\r\n    #counter: Generator<number, void, unknown>;\r\n    #id: string;\r\n    constructor(id: string) {\r\n        if (!is(id)) {\r\n            throw new IncorrectDataError(\"Valid Id is required\");\r\n        }\r\n        this.#subscribers = [];\r\n        this.#id = id;\r\n        this.#counter = counter();\r\n        this.#onError = undefined;\r\n    }\r\n\r\n    subscribe(callback: (state: VState) => void, options?: SubscriberOptions): string {\r\n        let subscriber = this.createSubscriber(callback, options);\r\n        this.#subscribers.push(subscriber);\r\n        return subscriber.id;\r\n    }\r\n\r\n    unsubscribe(subscribtionId: string): void {\r\n        if (!is(subscribtionId)) {\r\n            return;\r\n        }\r\n        let index = this.#subscribers.findIndex((subscirber: Subscriber<VState>) => {\r\n            return subscirber.id === subscribtionId;\r\n        })\r\n        if (index < 0) {\r\n            return;\r\n        }\r\n        this.#subscribers.splice(index, 1);\r\n    }\r\n\r\n    async notify(state: VState): Promise<boolean> {\r\n        let toRemove: string[] = []\r\n        this.#subscribers.forEach(sub => {\r\n            if (sub.options && sub.options.singleRun) {\r\n                toRemove.push(sub.id);\r\n            }\r\n            try {\r\n                sub.callback(state);\r\n            } catch (e) {\r\n                toRemove.push(sub.id);\r\n                if (this.#onError) {\r\n                    this.#onError(e);\r\n                }\r\n            }\r\n        })\r\n        toRemove.forEach(id => this.unsubscribe(id));\r\n        return true;\r\n    }\r\n\r\n    onError(callback: (e: Error) => void) {\r\n        this.#onError = callback;\r\n    }\r\n\r\n    getSubscribers(): Subscriber<VState>[] {\r\n        return [...this.#subscribers];\r\n    }\r\n\r\n    private createSubscriber(callback: (state: VState) => void, options?: SubscriberOptions): Subscriber<VState> {\r\n        return {\r\n            id: this.generateId(),\r\n            options: options,\r\n            callback: callback\r\n        }\r\n    }\r\n\r\n    private generateId(): string {\r\n        return `${this.#id}:${this.#counter.next().value}`;\r\n    }\r\n}","import { IncorrectDataError, WorkerNotReadyError } from \"../helpers/errors\";\r\nimport { is } from \"../helpers/functions\";\r\nimport { BpdStateAction } from \"../interfaces\";\r\n\r\nexport interface OnPerformCallback<V, P> {\r\n    (action: BpdStateAction<V>): Promise<P>;\r\n}\r\n\r\nexport interface OnUpdateCallback<V, P> {\r\n    (result: P, action?: BpdStateAction<V>): void;\r\n}\r\n\r\nexport interface OnErrorCallback<V> {\r\n    (error: Error, action?: BpdStateAction<V>): void;\r\n}\r\n\r\nexport interface IBpdStateWorker<V, P> {\r\n    perform(action: BpdStateAction<V>): void\r\n    onPerform(callback: OnPerformCallback<V, P>): void;\r\n    onUpdate(callback: OnUpdateCallback<V, P>): void;\r\n    onError(callback: OnErrorCallback<V>): void;\r\n}\r\n\r\nexport class BpdStateWorker<V, P> implements IBpdStateWorker<V, P> {\r\n    #queue: BpdStateAction<V>[];\r\n    #queuelock: boolean;\r\n    #lock: boolean;\r\n    #callback: OnPerformCallback<V, P> | undefined;\r\n    #onUpdate: OnUpdateCallback<V, P> | undefined;\r\n    #onError: OnErrorCallback<V> | undefined;\r\n    constructor() {\r\n        this.#queue = [];\r\n        this.#lock = false;\r\n        this.#queuelock = false;\r\n        this.#onError = undefined;\r\n        this.#callback = undefined;\r\n        this.#onUpdate = undefined;\r\n\r\n    }\r\n\r\n    onPerform(callback: OnPerformCallback<V, P>) {\r\n        this.#callback = callback;\r\n    }\r\n\r\n    onUpdate(callback: OnUpdateCallback<V, P>) {\r\n        this.#onUpdate = callback;\r\n    }\r\n\r\n    onError(callback: OnErrorCallback<V>) {\r\n        this.#onError = callback;\r\n    }\r\n\r\n    perform(action: BpdStateAction<V>) {\r\n        if (!is(action)) {\r\n            throw new IncorrectDataError(\"Inproper action object passed to worker\")\r\n        }\r\n        if (!is(this.#callback) || !is(this.#onUpdate)) {\r\n            throw new WorkerNotReadyError(\"Callbacks are not set\");\r\n        }\r\n        if (!this.isInQueue(action)) {\r\n            this.#queue.push(action);\r\n        }\r\n        this.run();\r\n    }\r\n\r\n    private run() {\r\n        if (this.#queuelock || this.#lock || !is(this.#queue)) {\r\n            return;\r\n        }\r\n        this.#lock = true;\r\n        let current = this.#queue.shift();\r\n        if (!current) {\r\n            this.#lock = false;\r\n            this.run();\r\n        }\r\n        if (this.#callback && current) {\r\n            this.#callback(current).then((state: P) => {\r\n                if (this.#onUpdate) {\r\n                    this.#onUpdate(state, current);\r\n                }\r\n                this.#lock = false;\r\n                this.run();\r\n            }).catch(e => {\r\n                if (this.#onError) {\r\n                    this.#onError(e, current);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private isInQueue(action: BpdStateAction<V>) {\r\n        this.#queuelock = true;\r\n        let index = this.#queue.findIndex(value => {\r\n            return action.action === value.action && value.data === action.data;\r\n        })\r\n        this.#queuelock = false;\r\n        return index > -1;\r\n    }\r\n}","import { InitStateError, IncorrectDataError } from \"../helpers/errors\";\r\nimport { is } from \"../helpers/functions\";\r\nimport { BpdStateAction, BpdStateManagerConfig, OnChangeEventType, StatePerformer } from \"../interfaces\";\r\nimport { ISubscriptionsManager, SubscriptionsManager } from \"../subscriptions/subscriptions\";\r\nimport { IBpdStateWorker, BpdStateWorker } from \"../worker/worker\";\r\n\r\nexport interface IBpdState<VState, PAction> {\r\n    perform(action: BpdStateAction<PAction>, callback?: (state: VState) => void | undefined): void;\r\n    subscribe(callback: (state: VState) => void): string | undefined;\r\n    unsubscribe(id: string): boolean;\r\n    getState(): VState;\r\n}\r\n\r\nexport class BpdState<VState, PAction> implements IBpdState<VState, PAction> {\r\n    #state: VState;\r\n    #id: string;\r\n    #config: BpdStateManagerConfig<VState>;\r\n    #worker: IBpdStateWorker<PAction, VState>;\r\n    #performer: StatePerformer<PAction, VState>;\r\n    #subscriptionManager: ISubscriptionsManager<VState>;\r\n\r\n    constructor(id: string, init: VState, performer: StatePerformer<PAction, VState>, config?: BpdStateManagerConfig<VState>) {\r\n        if (!is(id)) {\r\n            throw new InitStateError(\"State id must be provided\")\r\n        }\r\n        if (!is(init)) {\r\n            throw new InitStateError(\"Initial value must be a valid, initialized object\")\r\n        }\r\n        if (!is(performer)) {\r\n            throw new InitStateError(\"Perfromer callback was not provided\")\r\n        }\r\n        this.#id = id;\r\n        this.#state = init;\r\n        this.#config = config ?? {};\r\n        this.#performer = performer;\r\n        this.#worker = new BpdStateWorker<PAction, VState>();\r\n        this.#worker.onUpdate(this.onWorkerChange.bind(this))\r\n        this.#worker.onPerform(this.onWorkerPerform.bind(this));\r\n        this.#worker.onError(this.onWorkerError.bind(this));\r\n        this.#subscriptionManager = new SubscriptionsManager(this.#id);\r\n        this.#subscriptionManager.onError(this.onSubscriberError.bind(this));\r\n    }\r\n\r\n    perform(action: BpdStateAction<PAction>, callback?: (state: VState) => void) {\r\n        if (!is(action)) {\r\n            this.reportError(\"lib\", \"In proper action object\", new IncorrectDataError(\"In proper action object\"))\r\n        }\r\n        if (callback) {\r\n            this.#subscriptionManager.subscribe(callback, {\r\n                singleRun: true\r\n            })\r\n        }\r\n        this.#worker.perform(action);\r\n    }\r\n\r\n    subscribe(callback: (state: VState) => void): string | undefined {\r\n        if (!is(callback)) {\r\n            this.reportError(\"lib\", \"\", new IncorrectDataError(\"Callback has not been set\"))\r\n            return undefined;\r\n        }\r\n        return this.#subscriptionManager.subscribe(callback)\r\n    }\r\n\r\n    unsubscribe(id: string): boolean {\r\n        if (!is(id)) {\r\n            return false;\r\n        }\r\n        this.#subscriptionManager.unsubscribe(id);\r\n        return true;\r\n    }\r\n\r\n    getState(): VState {\r\n        return this.#state;\r\n    }\r\n\r\n    private onWorkerChange(state: VState, action?: BpdStateAction<PAction>,) {\r\n        if (['number', 'string', 'boolean'].includes(typeof state) || Array.isArray(state)) {\r\n            this.#state = state;\r\n        } else {\r\n            this.#state = { ...state };\r\n        }\r\n        this.#subscriptionManager.notify(state)\r\n            .then((result) => {\r\n                this.reportChange('action', action ? action.action : \"\")\r\n            })\r\n            .catch(e => {\r\n                this.reportError(\"action\", action ? action.action : \"\", e)\r\n            })\r\n    }\r\n\r\n    private onWorkerPerform(action: BpdStateAction<PAction>) {\r\n        return new Promise<VState>((resolve) => {\r\n            resolve(this.#performer(this.#state, action));\r\n        })\r\n    }\r\n\r\n    private onWorkerError(e: Error, action?: BpdStateAction<PAction>): void {\r\n        this.reportError('action', action ? action.action : \"\", e);\r\n    }\r\n\r\n    private onSubscriberError(e: Error) {\r\n        this.reportError('lib', \"Subscribers error\", e);\r\n    }\r\n\r\n    private reportError(type: OnChangeEventType, detail: string, e: Error) {\r\n        if (this.#config && this.#config.onError) {\r\n            this.#config.onError(this.#id, type, e, detail)\r\n        }\r\n    }\r\n\r\n    private reportChange(type: OnChangeEventType, detail: string) {\r\n        if (this.#config && this.#config.onChange) {\r\n            this.#config.onChange(this.#id, type, detail, this.#state)\r\n        }\r\n    }\r\n\r\n}","import { CommonError, CreateStateError, StateManagerShorthandError } from \"./helpers/errors\";\r\nimport { is } from \"./helpers/functions\";\r\nimport { BpdStateManagerConfig, StatePerformer, BpdStateAction, BpdManagedStates } from \"./interfaces\";\r\nimport { BpdState, IBpdState } from \"./state/state\";\r\n\r\nexport const VERSION_INFO = \"0.1.0\";\r\ndeclare global {\r\n    interface Window {\r\n        $bdpStateManager: any;\r\n    }\r\n}\r\n\r\nexport class BpdStateManager<VStates, TActions> {\r\n    #config: BpdStateManagerConfig<VStates> | undefined;\r\n    #states: BpdManagedStates<VStates, TActions>;\r\n    constructor(config?: BpdStateManagerConfig<VStates>) {\r\n        this.#config = config;\r\n        this.#states = {};\r\n    }\r\n\r\n    createState(name: string, initialValue: VStates, performer: StatePerformer<TActions, VStates>, config?: BpdStateManagerConfig<VStates>) {\r\n        if (!is(name)) {\r\n            throw new CreateStateError(\"State name was not provided\");\r\n        }\r\n        this.#states[name] = new BpdState(name, initialValue, performer, config ?? this.#config);\r\n    }\r\n\r\n    removeState(name: string) {\r\n        this.executeIfValid(name, \"Perform\", (state) => {\r\n            delete this.#states[name];\r\n        })\r\n    }\r\n\r\n    getState(name: string): IBpdState<VStates, TActions> | undefined {\r\n        let resultState = undefined;\r\n        this.executeIfValid(name, \"Perform\", (state) => {\r\n            resultState = state;\r\n        })\r\n        return resultState;\r\n    }\r\n\r\n    perform(name: string, action: BpdStateAction<TActions>, callback?: (state: VStates) => void) {\r\n        this.executeIfValid(name, \"Perform\", (state) => {\r\n            state.perform(action, callback);\r\n        })\r\n    }\r\n\r\n    subscribe(name: string, callback: (state: VStates) => void): string | undefined {\r\n        let id = undefined;\r\n        this.executeIfValid(name, \"Subscribe\", (state) => {\r\n            id = state.subscribe(callback);\r\n        })\r\n        return id;\r\n    }\r\n\r\n    unsubscribe(name: string, id: string) {\r\n        this.executeIfValid(name, \"Unsubscribe\", (state) => {\r\n            state.unsubscribe(id);\r\n        })\r\n    }\r\n\r\n    private executeIfValid(name: string, methodName: string, callback: (state: IBpdState<VStates, TActions>) => void) {\r\n        if (!is(name)) {\r\n            throw new CommonError(methodName + \"Error\", \"State name is not provided\")\r\n        }\r\n        let state = this.#states[name];\r\n        if (!is(state)) {\r\n            throw new CommonError(methodName + \"StateError\", \"State not found\")\r\n        }\r\n        callback(state);\r\n    }\r\n}\r\n\r\n\r\nexport function createStateManager<VStates, TActions>(config?: BpdStateManagerConfig<VStates>): void {\r\n    window.$bdpStateManager = new BpdStateManager<VStates, TActions>(config);\r\n}\r\n\r\nexport function createState<VStates, TActions>(name: string, initialValue: VStates, performer: StatePerformer<TActions, VStates>, config?: BpdStateManagerConfig<VStates>): void {\r\n    if (!is(window.$bdpStateManager)) {\r\n        throw new StateManagerShorthandError(\"createState\", \"Manager must be initialized first with createStateManager\")\r\n    }\r\n    window.$bdpStateManager.createState(name, initialValue, performer, config);\r\n}\r\n\r\nexport function removeState<VStates, TActions>(name: string): void {\r\n    if (!is(window.$bdpStateManager)) {\r\n        throw new StateManagerShorthandError(\"removeState\", \"Manager must be initialized first with createStateManager\")\r\n    }\r\n    window.$bdpStateManager.removeState(name);\r\n}\r\n\r\nexport function getState<VStates, TActions>(name: string): IBpdState<VStates, TActions> {\r\n    if (!is(window.$bdpStateManager)) {\r\n        throw new StateManagerShorthandError(\"getState\", \"Manager must be initialized first with createStateManager\")\r\n    }\r\n    return window.$bdpStateManager.getState(name);\r\n}\r\n\r\nexport function perform<VStates, TActions>(name: string, action: BpdStateAction<TActions>, callback?: (state: VStates) => void) {\r\n    if (!is(window.$bdpStateManager)) {\r\n        throw new StateManagerShorthandError(\"perform\", \"Manager must be initialized first with createStateManager\")\r\n    }\r\n    window.$bdpStateManager.perform(name, action, callback);\r\n}\r\n\r\nexport function subscribe<VStates, TActions>(name: string, callback: (state: VStates) => void): string {\r\n    if (!is(window.$bdpStateManager)) {\r\n        throw new StateManagerShorthandError(\"subscribe\", \"Manager must be initialized first with createStateManager\")\r\n    }\r\n    return window.$bdpStateManager.subscribe(name, callback);\r\n}\r\n\r\nexport function unsubscribe<VStates, TActions>(name: string, id: string) {\r\n    if (!is(window.$bdpStateManager)) {\r\n        throw new StateManagerShorthandError(\"unsubscribe\", \"Manager must be initialized first with createStateManager\")\r\n    }\r\n    window.$bdpStateManager.unsubscribe(name, id);\r\n}\r\n\r\n"],"sourceRoot":""}